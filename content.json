{"meta":{"title":"小彩鸟","subtitle":"一起成长","description":"一起成长","author":"Clouduncle","url":"https://blog.utone.xyz","root":"/"},"pages":[{"title":"","date":"2020-05-24T11:58:18.542Z","updated":"2019-11-21T12:26:18.000Z","comments":true,"path":"404.html","permalink":"https://blog.utone.xyz/404.html","excerpt":"","text":""},{"title":"Archives","date":"2017-09-20T12:49:56.000Z","updated":"2019-11-21T12:26:18.000Z","comments":false,"path":"archive/index.html","permalink":"https://blog.utone.xyz/archive/index.html","excerpt":"","text":""},{"title":"search","date":"2020-05-24T15:41:20.797Z","updated":"2020-05-24T15:40:11.568Z","comments":true,"path":"search/index.html","permalink":"https://blog.utone.xyz/search/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-05-24T12:46:29.221Z","updated":"2020-05-24T12:46:29.221Z","comments":true,"path":"tags/index.html","permalink":"https://blog.utone.xyz/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2015-07-16T04:00:00.000Z","updated":"2020-05-25T00:04:39.638Z","comments":true,"path":"about/index.html","permalink":"https://blog.utone.xyz/about/index.html","excerpt":"","text":""}],"posts":[{"title":"linux系统检查","slug":"linux高级","date":"2015-07-20T04:00:00.000Z","updated":"2020-05-26T06:10:41.903Z","comments":true,"path":"2015/07/20/linux高级/","link":"","permalink":"https://blog.utone.xyz/2015/07/20/linux%E9%AB%98%E7%BA%A7/","excerpt":"","text":"系统常用检查命令&emsp;&emsp;磁盘：df -h&emsp;&emsp;内存：free -m&emsp;&emsp;负载：top [root@hadoop001 ~]$ free -m total used free shared buff/cache availableMem: 7823 222 6229 257 1371 7096Swap: 0 0 0 &emsp;&emsp;大数据生产服务器swap是设置0 10也可以（swap作用是将硬盘划分过来作为内存，所以当数据进入swap那么肯定是很缓慢的，所以设置为0） [root@hadoop001 ~]$ df -hFilesystem Size Used Avail Use% Mounted on/dev/vda1 40G 16G 25G 39% / /dev/vdb1 2T 16G 25G 1% /data01/dev/vdb2 2T 16G 25G 1% /data02/dev/vdb3 2T 16G 25G 1% /data03/dev/vdb4 2T 16G 25G 1% /data04 不要devtmpfs 3.9G 0 3.9G 0% /devtmpfs 3.9G 16K 3.9G 1% /dev/shmtmpfs 3.9G 258M 3.6G 7% /runtmpfs 3.9G 0 3.9G 0% /sys/fs/cgrouptmpfs 783M 0 783M 0% /run/user/1004 （系统启动多少时间，可以看到今天前什么时候重启过）（几个用户在登录）（系统负载，1分钟5分钟15分钟，判断服务器卡不卡）top - 21:20:22 up 7 days, 58 min, 1 user, load average: 0.01, 0.03, 0.05Tasks: 89 total, 1 running, 88 sleeping, 0 stopped, 0 zombie%Cpu(s): 0.2 us, 0.5 sy, 0.0 ni, 99.0 id, 0.0 wa, 0.0 hi, 0.0 si, 0.3 stKiB Mem : 8011076 total, 6377388 free, 229060 used, 1404628 buff/cacheKiB Swap: 0 total, 0 free, 0 used. 7265724 avail Mem PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 2374 root 20 0 394348 31376 8608 S 0.3 0.4 41:44.99 jdog-kunlunmirr 1 root 20 0 125356 3796 2508 S 0.0 0.0 1:22.32 systemd 2 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kthreadd 3 root 20 0 0 0 0 S 0.0 0.0 0:00.08 ksoftirqd/0 5 root 0 -20 0 0 0 S 0.0 0.0 0:00.00 kworker/0:0H 6 root 20 0 0 0 0 S 0.0 0.0 0:02.50 kworker/u4:0 系统负载&emsp;&emsp;load average: 0.01, 0.03, 0.05&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 1min 5min 15min &emsp;&emsp;经验值: 10 生产不用超过这个 ，否则认为服务器就是卡&emsp;&emsp;&emsp;&emsp;a.是你的程序有问题 在大量跑计算&emsp;&emsp;&emsp;&emsp;b.是不是被挖矿 yarn redis 最容易被hacker 攻击&emsp;&emsp;&emsp;&emsp;c.硬件问题 内存条 硬盘 &emsp;&emsp;a，b选项可以看top中%CPU %MEM，哪些进程属于哪个user占用的cpu和内存过高，排查是故意的操作还是程序问题&emsp;&emsp;c选项遇到过硬盘问题导致程序卡主，导致系统负载过高。。正常服务器负载是1,2,3超过5就要观察，超过10就要排查下&emsp;&emsp;c判断硬件问题最简单方法就是重启服务器，如果硬件损坏开机就会有灯闪 yum安装 yum search httpd yum install httpd centos6:service httpd status|start|stop 1个应用httpd centos7:service httpd status|start|stop 是向下兼容的也能使用systemctl status|start|stop httpd app2 app3 app4 一次性操作多个应用 搜索 卸载:[root@hadoop101 ~]# rpm -qa|grep httphttpd-2.4.6-90.el7.centos.x86_64httpd-tools-2.4.6-90.el7.centos.x86_64[root@hadoop101 ~]# rpm -e 包名称 –nodeps [root@hadoop101 ~]# yum remove httpd-2.4.6-90.el7.centos.x86_64 进程 端口号ps -ef | grep httpkill -9 16629kill -9 16630 16631 16632 16633 16634 根据匹配字段 搜索所有符合的进程 全部杀死但是: 生产慎用 除非你先ps查看 这个关键词搜索的进程 是不是都是你想要杀死的进程保不齐有个其他服务的进程 会造成误杀 生产事故！！！ [root@hadoop101 ~]# ps -ef|grep httproot 18363 1 0 21:51 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 18364 18363 0 21:51 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 18365 18363 0 21:51 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 18366 18363 0 21:51 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 18367 18363 0 21:51 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 18368 18363 0 21:51 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDroot 18387 15881 0 21:51 pts/2 00:00:00 grep –color=auto http 上面第二行是进程号 第三行是父进程号 , 可知18363是主进程 想知道进程占用哪个端口号(netstat -nlp| grep 3306（查看端口启动哪个进程）。netstat -nlp| grep mysql（查看mysql占用哪个端口）):[root@ruozedata001 ~]# netstat -nlp| grep 18670tcp6 0 0 :::80 :::* LISTEN 18670/httpd[root@ruozedata001 ~]#[root@ruozedata001 ~]#[root@ruozedata001 ~]#[root@ruozedata001 ~]# netstat -nlp| grep 18671[root@ruozedata001 ~]# netstat -nlp| grep 18672[root@ruozedata001 ~]# netstat -nlp| grep 18673[root@ruozedata001 ~]# 上面可见进程不一定都会起到端口号但是 与其他服务通信 必然需要端口号！！！ 老板: 去打开的应用yyy的网页？你会涉及到哪些Linux命令我知道xxx服务器的ip,之后查询这个yyy对应的端口号:ps -ef|grep yyy ,知道进程号后得到该进程占用的端口号:netstat -nlp|grep pid此时已经得到了端口号之后浏览器里输入http://ip:端口号 (还需要确保能ping 通 ip还有端口号) 细节:[root@ruozedata001 ~]# netstat -nlp| grep 18670tcp6 0 0 :::80 :::* LISTEN 18670/httpdtcp6 0 0 :80 :::* LISTEN 18670/httpdtcp6 0 0 192.168.0.3:80 :::* LISTEN 18670/httpd::和0.0.0.0等价于当前机器的ip tcp6 0 0 127.0.0.1:80 :::* LISTEN 18670/httpdtcp6 0 0 localhost:80 :::* LISTEN 18670/httpd危险: 127.0.0.1和localhost该服务只能自己服务器的里面自己访问自己,外面的服务器访问不了该服务生产中遇到过:服务启动了,防火墙也关了,但是连接不上服务 原因就是是以127.0.0.1的方式启动的,默认配置文件没有修改 测试服务通不通: ping ip测试服务器端口能不能通: telnet ip port yum install -y telnet 学习时：如果都不能通可能防火墙开启。如果是云主机需要开启安全组策略生产中：如果都不能通，直接找linux运维 网络工程师（这个就需要加防火墙策略，防火墙分为硬件或者软件，软件一般便宜一些） 总结:看到错误 Connection refused ping ip (失败未必就是不能连接的有些服务器是禁止ping的(防止黑客扫描) 但是做telnet ip port是可以的) telnet ip port ok 配置企业级别yum源 取代互联网的repo文件的URL (因为我们做的东西都是内网的是物理隔绝的不会连接互联网,) 4.下载wget https://repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/2.4.5/spark-core_2.12-2.4.5.jarcurl https://repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/2.4.5/spark-core_2.12-2.4.5.jar -O spark-core_2.12-2.4.5.jar 5.压缩 解压zip -r xxx.zip xxx/*unzip xxx.zip tar -czvf xxxx.tar.gz xxxx/*tar -xzvf xxxx.tar.gz Examples: tar -cf archive.tar foo bar # Create archive.tar from files foo and bar. tar -tvf archive.tar # List all files in archive.tar verbosely. tar -xf archive.tar # Extract all files from archive.tar. 如何找到命令 which[root@hadoop101 ~]# which lsalias ls=’ls –color=auto’ 想要命令快速找到 which xxx 来验证，其实就是提前将命令的目录配置在环境变量$PATHecho $PATH 来查看是否将命令的目录配置上！ 定时","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.utone.xyz/tags/linux/"}]},{"title":"linux","slug":"linux","date":"2015-07-18T04:00:00.000Z","updated":"2020-05-26T03:09:18.387Z","comments":true,"path":"2015/07/18/linux/","link":"","permalink":"https://blog.utone.xyz/2015/07/18/linux/","excerpt":"","text":"[root@hadoop102 ~]root : 指的是默认管理员 有最大权限hadoop102 : 指的是机器名~ : 指的是当前该用户的家目录 命令介绍1) pwd : 查看当前光标所在的目录 ls命令2) ls : 查看&emsp;&emsp;ls -l 显示额外信息(权限 用户用户组 时间 大小) 等价于:ll&emsp;&emsp;ll -a 也显示隐藏文件夹、文件&emsp;&emsp;&emsp;&emsp;隐藏文件和文件夹都是以‘.’开头，我们可以自己隐藏文件或文件夹&emsp;&emsp;ll -h 查看 文件 的大小&emsp;&emsp;ll -rt : 其中 -r -t是按照时间排序,可以快速找到哪些文件或者文件夹更新了 3) cd : 切换路径&emsp;&emsp;cd .. : 返回上一层目录&emsp;&emsp;cd - : 回退到上一次的目录 家目录root是系统管理员用户 家目录是 /root创建的普通用户xx 家目录是 /home/xx 家目录是 ~ 表示如何进入家目录??&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; ① cd /root&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; ② cd 直接回车&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; ③ cd ~ 4) mkdir : 创建文件夹&emsp;&emsp;需求：创建并联的三个文件夹 mkdir dir1 dir2 dir3&emsp;&emsp;需求：创建串联的三个文件夹 mkdir -p dir4/dir5/dir65) help : 命令帮助&emsp;&emsp;ls –help6) clear : 清空屏幕 或者 Ctrl+l 查看文件/文件夹大小查看文件大小： ll -h 、du -sh查看文件夹大小: du -sh 移动拷贝7) mv : 移动&emsp;&emsp;标准写法 : mv dir1 dir0/dir1&emsp;&emsp;不标准写法: mv dir1 dir08) cp : 拷贝&emsp;&emsp;标准写法 : cp -r dir2 dir0/dir2&emsp;&emsp;不标准写法: cp -r dir2 dir0 &emsp;&emsp;mv是始终一份 速度快&emsp;&emsp;cp是两份 速度慢一点 创建文件9) touch : 创建空文件10) vi : 创建文件并编辑&emsp;&emsp; vi 1.log&emsp;&emsp;&emsp;&emsp;默认命令模式 。i建 进入编辑模式 。Esc建 从编辑模式进入命令模式 。Shift+:建从命令行模式进入尾行模式,输入wq退出11) echo : 打印12) &gt; : 创建或者覆盖 (高危命令)&emsp;&emsp;&emsp;&emsp;echo “hello” &gt; 3.log13) &gt;&gt; : 追加&emsp;&emsp;&emsp;&emsp;echo “hello world” &gt;&gt; 3.log 查看文件内容14) cat 查看文件内容,文件内容一次全部显示 ctrl+z中断15) more 文件内容一页页往下翻，按空格往下 无法回退 q退出16）less 文件内容 按↑↓键翻行 q退出 用的少&emsp;&emsp;&emsp;&emsp;cat适合文件内容少的。 文件内容稍微多点的用more17）tail&emsp;&emsp;tail -f xxx.log 实时监控文件内容，如果文件移除停止监控,再创建xxx.log文件也不会继续监控&emsp;&emsp;tail -F xxx.log 实时监控文件内容，如果文件移除会继续尝试读取内容不会停止,再创建xxx.log文件后还能继续监控 需求:实时查看文件内容倒数100行&emsp;&emsp;tail -100f xxx.log 注意:此处只能f不能用F 需求:文件内容很多,如何搜索error信息 ‘|’:管道符,前面的结果作为后面的输入‘grep’:过滤&emsp;&emsp;cat xxx.log | grep -A 5 ERROR error后5行信息&emsp;&emsp;cat xxx.log | grep -B 5 ERROR error前5行信息&emsp;&emsp;cat xxx.log | grep -C 5 ERROR error前后各5行信息 但是如果error很多,用cat可能会刷屏,所以优化为: cat xxx.log | grep -C 5 ERROR &gt; 20150718error.log 上传下载命令安装工具包 yum install -y lrzszsz xxx.log是下载 Linux–》window 下载位置查看CRT的配置rz+回车 是上传 window–》Linux 别名18) 别名 alias[root@ruozedata001 log]# aliasalias cp=’cp -i’alias egrep=’egrep –color=auto’alias fgrep=’fgrep –color=auto’alias grep=’grep –color=auto’alias l.=’ls -d .* –color=auto’alias ll=’ls -l –color=auto’alias ls=’ls –color=auto’alias mv=’mv -i’alias rm=’rm -i’alias which=’alias | /usr/bin/which –tty-only –read-alias –show-dot –show-tilde’ 上面解释了为什么ls -l可以简写为ll &emsp;&emsp;创建别名 : alias jj=’cd /tmp’ (注意中间不要乱用空格) (只在当前会话生效,想要全局生效需要把命令拷贝到对应用户的配置文件然后生效文件) 全局变量全局变量(配置完了需要生效配置,并且重新打开CRT窗口)全局：/etc/profile 所有用户都可以使用个人: 只能当前用户使用,其他不能使用&emsp;&emsp; ~/.bash_profile&emsp;&emsp; ~/.bashrc (个人环境变量设置推荐这个文件) 场景: ssh 远程执行B机器 命令 找不到 java command not found但是直接登录B机器 命令是能找到的,原因:命令的环境变量配置在.bash_profile 是不正确的。应该配置在.bashrc文件里面 生效文件:&emsp;&emsp;source /etc/profile&emsp;&emsp;source ~/.bash_profile&emsp;&emsp;source ~/.bashrc CRT窗口是静态窗口,配置生效后可以重新打开个窗口,拿到最新状态 创建用户19) useradd clouduncle :添加用户clouduncle20) su clouduncle:切换用户clouduncle 历史命令21) history&emsp;自己写的命令不想让别人看到 : history -c (清空history)直连 服务器 history -c可以生效跳板机(vpn) 连接 服务器 history -c可以生效堡垒机 敲一个命令都记录在堡垒机系统里,一般都有可视化web界面,能搜索谁做了什么命令 history -c就不会有效果 高危命令&emsp;&emsp; 千万不要做 rm -rf / 运维可以限制这个命令失效&emsp;&emsp;删除文件: rm 11.log 会询问是否删除&emsp;&emsp;不询问直接删除文件: rm -f 11.log&emsp;&emsp;删除文件夹: rm -r dir1&emsp;&emsp;不询问直接删除文件夹: rm -rf dir1 场景: 注意&emsp;&emsp;脚本里&emsp;&emsp;LOG_PATH=/xxx/yyy&emsp;&emsp;&emsp;&emsp;业务逻辑判断去赋值,如果漏掉了一种没有赋值那么LOG_PATH为空&emsp;&emsp;rm -rf ${LOG_PATH} /* ==&gt; rm -rf /* 怎么避免?每次执行这个命令之前 , 先判断${LOG_PATH}是否存在然后才能执行 发生了怎么办？如果不小心执行了这个操作且没有备份，则马上停止所有服务不要往硬盘上再写数据了，让运维去拿着硬盘去维修公司恢复数据。最好是运维做出这种命令限制 用户和用户组（一般都是由运维操作，除非平台运维都由自己团队接过来）用户1）创建普通用户clouduncle: useradd clouduncle&emsp;&emsp;同时也会创建clouduncle的用户组,设置clouduncle用户的组为clouduncle,且把clouduncle用户组设置为主组同时也创建家目录 /home/clouduncle &emsp;&emsp;用户存储信息一般记录在: /etc/passwd&emsp;&emsp;用户组存储信息一般记录在: /etc/group 2）查看用户clouduncle信息：id clouduncle 3) 删除用户clouduncle：userdel clouduncle删除用户后, /home/clouduncle文件夹还存在,之后手动删除该文件夹下的所有文件包括隐藏文件模拟全局变量丢失。重新创建clouduncle用户出现问题: 123456789101112[root@hadoop102 home]# su cloudunclebash-4.1$ [root@hadoop102 clouduncle]# ll -a &#x2F;etc&#x2F;skel&#x2F;.*总用量 36drwxr-xr-x. 4 root root 4096 2月 8 2018 .drwxr-xr-x. 107 root root 12288 5月 25 21:03 ..-rw-r--r--. 1 root root 18 5月 11 2016 .bash_logout-rw-r--r--. 1 root root 176 5月 11 2016 .bash_profile-rw-r--r--. 1 root root 124 5月 11 2016 .bashrcdrwxr-xr-x. 2 root root 4096 11月 12 2010 .gnome2drwxr-xr-x. 4 root root 4096 2月 8 2018 .mozilla 出现上述问题原因是当前用户的家目录里面缺少了全局变量信息,此时如下操作: 1[root@hadoop102 clouduncle]# cp &#x2F;etc&#x2F;skel&#x2F;.* .&#x2F; 4)切换用户: su&emsp;&emsp;推荐: su - clouduncle (其中’-‘代表该用户切换到家目录,且执行环境变量文件) 5)普通用户临时使用root的最大权限 : sudo&emsp;&emsp;root用户下&emsp;&emsp;&emsp;&emsp;vi /etc/sudoers&emsp;&emsp;&emsp;&emsp;添加 : clouduncle ALL=(root) NOPASSWD:ALL 生产中可以要求运维给自己linux用户加一个sudo的权限 设置密码1)修改用户密码: passwd&emsp;&emsp;passwd+回车 修改当前光标所属用户密码&emsp;&emsp;passwd clouduncle 修改clouduncle的密码 2)./etc/passwd文件下面两种情况切换用户都会失败&emsp;&emsp;clouduncle:x:1004:1005::/home/clouduncle:/sbin/nologin 提示&emsp;&emsp;clouduncle:x:1004:1005::/home/clouduncle:/usr/bin/false 没提示 CDH平台很多用户如 hdfs yarn hivesu - yarn是不成功的,原因是yarn的/sbin/nologin /usr/bin/false 需要改成 /bin/bash 用户组1)创建组bigdata : groupadd bigdata2)查看组: cat /etc/group|grep bigdata3)将用户分配到bigdata组: (usermod –help查询方法) 123[root@hadoop102 clouduncle]# usermod -a -G bigdata clouduncle[root@hadoop102 clouduncle]# id clouduncle uid&#x3D;501(clouduncle) gid&#x3D;501(clouduncle) 组&#x3D;501(clouduncle),502(bigdata) 4)设置bigdata为用户clouduncle主组(gid): usermod -g bigdata clouduncle 123456[root@hadoop102 clouduncle]# usermod -g bigdata clouduncle[root@hadoop102 clouduncle]# id clouduncleuid&#x3D;501(clouduncle) gid&#x3D;502(bigdata) 组&#x3D;502(bigdata)[root@hadoop102 clouduncle]# usermod -a -G clouduncle clouduncle[root@hadoop102 clouduncle]# id clouduncleuid&#x3D;501(clouduncle) gid&#x3D;502(bigdata) 组&#x3D;502(bigdata),501(clouduncle) 权限-rw-r–r– 1 root root 9 Apr 18 20:50 22.logdrwxr-xr-x 2 root root 6 Apr 15 22:12 dir3 &emsp;&emsp;第一个字母：d文件夹 -文件 l连接 &emsp;&emsp;后面9个字母,3个字母为一组:r:read 读权限 代表数字是4w:write 写权限 代表数字是2x: 执行 代表数字是1-: 没权限 代表数字是0 占位 7=4 2 15=4 16=4 2 &emsp;&emsp;rw- 第一组 6 代表文件或文件夹的所属用户，读写权限&emsp;&emsp;r– 第二组 4 代表文件或文件夹的所属用户组，读权限&emsp;&emsp;r– 第三组 4 代表其他用户组的用户对这个文件或文件夹，读权限 例子: rw-r- -r- - root root 22.log&emsp;&emsp;可以看到22.log 属于root用户 属于root用户组&emsp;&emsp;root用户看前三个对22.log有读和写的权限。root用户组看中间对22.log有读权限。其他用户组的用户看后三个，对22.log有读权限 关于权限：&emsp;&emsp;chmod -R 777 文件或文件夹 (777分别对应所属用户、所属用户组、其他用户组的用户 所拥有的权限)(7=4 2 1)&emsp;&emsp;chown -R 用户:用户组 文件或文件夹其中-R ： 以递归方式更改所有的文件及子目录 案例:[root@hadoop102 tmp]# vi clouduncle.logwww.baidu.com [clouduncle@hadoop102 tmp]$ cat clouduncle.logwww.baidu.com[clouduncle@hadoop102 tmp]$ 收回其他组的r权限[root@hadoop102 tmp]# chmod 640 clouduncle.log[clouduncle@hadoop102 tmp]$ cat clouduncle.logcat: clouduncle.log: Permission denied 搜索场景：接手大数据平台，服务器登录，大数据组件安装目录在哪？&emsp;&emsp; find / -name ‘hadoop‘ (/表示从根目录开始,是通配符) 如果生产服务器挂10个盘,那么每个盘都要扫描&emsp;&emsp; find /opt/module -name ‘*hadoop‘ 补充:history 命令ps -ef 查看进程 vi&emsp;&emsp;&emsp;&emsp;默认命令模式 。i建 进入编辑模式 。Esc建 从编辑模式进入命令模式 。Shift+:建从命令行模式进入尾行模式,输入wq退出，wq!强制保存退出，q!强制退出不保存正常编辑一个文件，要正常退出 wq&emsp;&emsp;如果编辑的时候进程被杀死没正常退出:&emsp;&emsp;-rw-r–r– 1 root root 16 Apr 19 21:26 2.log&emsp;&emsp;-rw-r–r– 1 root root 12288 Apr 19 21:31 .2.log.swp&emsp;&emsp;之后再次编辑会无法编辑出现found a swap file by the name “.2.log.swp”&emsp;&emsp;解决方法:删除”.2.log.swp”文件,这是个隐藏文件需要ll -a才能看到 &emsp;&emsp;注意粘贴的坑,如果在命令模式的时候直接粘贴会出现第一行内容丢失 不完整,所以必须先进入编辑模式才能粘贴 如果想要搜索文件XXX内容可以 尾行模式输入 /XXX如果想要显示行号,尾行模式输入 set nu 设置行号 , set nonu 取消行号如果想要知道光标所在的行,尾行模式输入 f 命令模式常用快捷方式dd 删除光标当前行dG 删除光标当前及以下的所有行ndd 删除光标当前行及以下n行 gg 光标跳转到第一行第一个字母G 光标跳转到最后一行第一个字母shift + $ 行尾 场景：清空这个文件内容，从另外一个文件内容 拷贝过来gg–》dG –》 i –&gt;鼠标右键单击 粘贴上 清空补充：cat /dev/null &gt; 1.logecho “” &gt; 2.logtrue &gt; 1.log 也是清空文件内容 0字节 [root@ruozedata001 ~]# lltotal 16-rw-r–r– 1 root root 0 Apr 19 21:58 1.log-rw-r–r– 1 root root 1 Apr 19 21:58 2.log 可以看到第一种方式清空是0字节，第二种方式清空还有一个字节其实并没有真正清空还有个空白行 场景:shell脚本，对数据文件清空操作，根据字节大小判断是否清空完成echo “” &gt; 2.logif filezie &gt; 0 then 业务不操作 else 2.log 灌业务数据 上面清空操作是错误文件自己数不会为0，永远不会进入业务操作 结束了","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.utone.xyz/tags/linux/"}]}],"categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.utone.xyz/tags/linux/"}]}